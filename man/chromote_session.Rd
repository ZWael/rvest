% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/chromote.R
\name{chromote_session}
\alias{chromote_session}
\title{Dynamic web scraping with chromote}
\usage{
chromote_session(url)
}
\arguments{
\item{url}{Website url to read from.}
}
\description{
\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}

\code{\link[=read_html]{read_html()}} operates of the HTML source code downloaded from the server.
This works for most websites but can fail if the site uses javascript to
generate the HTML. \code{chromote_session()} provides an alternative interface
that runs a real webserver in the background. This allows you to access
elements of the HTML page that are generated dynamically by javascript,
and to interact to (e.g.) click on buttons or fill in forms.

Behind the scenes, this function uses the
\href{https://rstudio.github.io/chromote}{chromote} package, which requires that
you have a copy of \href{https://www.google.com/chrome/}{Google Chrome} installed
on your machine.
}
\examples{
sess <- chromote_session("https://hadley.nz")
sess |> html_elements("p")
sess |> html_element("xyz")
sess |> html_element("p")

sess <- chromote_session("https://www.bodybuilding.com/exercises/finder")
sess$click(".ExLoadMore-btn")

\dontshow{
# Hack to suppress R CMD check error about connections
Sys.setenv("_R_CHECK_CONNECTIONS_LEFT_OPEN_" = "FALSE")
}
}
